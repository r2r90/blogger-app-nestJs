version: '3.8'

services:
  app-dev:
    container_name: nestjs-app-dev
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '3000:3000'
      - '9229:9229'
    develop:
      watch:
        - action: sync
          path: .
          target: /usr/src/app
          ignore:
            - node_modules/
            - .pnpm-store/
        - action: rebuild
          path: package.json
          target: /usr/src/app/package.json
    networks:
      - app-network

  mongo-db:
    image: mongo
    container_name: blogger-mongodb-nestjs
    ports:
      - '${LOCAL_MONGO_DB_PORT}:${LOCAL_MONGO_DB_PORT}'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mongodb/data
    networks:
      - app-network

  postgres-db:
    image: postgres:17-alpine
    container_name: blogger-postgresdb-nestjs
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgAdmin:
    image: dpage/pgadmin4
    container_name: nestjs-blogger-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - '${PGADMIN_PORT}:80'
    depends_on:
      - postgres-db
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
